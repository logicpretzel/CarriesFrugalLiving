@model CarriesFrugalLiving.Models.Ingredient

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ingredient</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       <input type="hidden" name="RecipeID" value="@Model.RecipeID" />

        <div class="form-group">
            <div class="col-md-2">Quantity (whole number)</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.qtyWhole, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.qtyWhole, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-2">and/or Fractional Qty:</div>
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.qtyFraction, (SelectList)ViewData["Fractions"] )
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-8">
               @Html.DropDownListFor(x => x.UnitsID, (SelectList)ViewData["UMList"]      )
            </div>
        </div>
           

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary " />
            </div>
        </div>
    </div>
}

<div>

   @Html.ActionLink("Back To Edit", "Edit", new { id = Model.RecipeID }, new { @class = "btn btn-primary" })
 
    
</div>
<div id="list">
    @Html.Action("IngredientList", "Recipes", new { id = Model.RecipeID })
</div>

<script type="text/javascript">

        function d(id) {
            var url = "/Recipes/RemoveIngredient/";
            $.get(url, { id: id })
             .done(function (response) {
                 $("#list").html(response);
             });
        }
</script>