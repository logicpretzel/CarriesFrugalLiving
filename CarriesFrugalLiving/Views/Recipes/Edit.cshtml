@model CarriesFrugalLiving.Models.Recipe

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
 @if (User.Identity.IsAuthenticated)
 {
     if ((User.IsInRole("Admin") || (User.Identity.Name.ToString().Trim().ToLower()) == (Model.UserCd.Trim().ToLower())))
     {
         using (Html.BeginForm())
         {

             @Html.AntiForgeryToken()

    <div >
         <h4>Recipe</h4>
         <hr />
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })
         @Html.HiddenFor(model => model.ID)

         <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
         </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
               
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

            <div>
                <div class="panel-default">

                    <div class="panel-heading">Ingredients</div>
                    <div class="panel-body">
                        @Html.Action("IngredientDetails", "Recipes", new { id = Model.ID })<br />
                        <input name="addingredient" type="submit" value="Add Ingredient" class="btn btn-primary" />
                    </div>
                    <div id="addingredient">

                    </div>

                </div>



                <br />
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Preparation, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Preparation, new { htmlAttributes = new { @class = "form-control", @rows = "10" } })
                    @Html.ValidationMessageFor(model => model.Preparation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CookingInstructions, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.CookingInstructions, new { htmlAttributes = new { @class = "form-control", @rows = "10" } })
                    @Html.ValidationMessageFor(model => model.CookingInstructions, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CookingMethod, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.EnumDropDownListFor(model => model.CookingMethod, htmlAttributes: new { @class = "form-control" } )
                    @Html.ValidationMessageFor(model => model.CookingMethod, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ServingInstructions, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.ServingInstructions, new { htmlAttributes = new { @class = "form-control", @rows = "10" } })
                    @Html.ValidationMessageFor(model => model.ServingInstructions, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NutritionInformation, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.NutritionInformation, new { htmlAttributes = new { @class = "form-control", @rows = "10" } })
                    @Html.ValidationMessageFor(model => model.NutritionInformation, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input name="submit" type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>

         } <!--  BeginForm End -->
        @Html.ActionLink("[ Cancel ( View Recipe - Changes will not be saved! ) ]", "Details", new { id = Model.ID })
        <br /><br /><br />
        @Html.Action("Picture", "Recipes", new { recipeId = Model.ID }) <br />
        @Html.ActionLink("Upload Image or Swap Image", "Upload", new { id = Model.ID })  <span class="warning ">Save any changes first!</span>
         <br /><br />
        <a href="@Url.Action("Delete", new { id = Model.ID })">
            <i class="glyphicon glyphicon-remove-circle"></i>
            <span class="sr-only">Delete Record</span>
        </a>

        @Html.ActionLink("Delete", "Delete", new { id = Model.ID })
     }
     else {
        <div class="col-sm-10  alert-danger">
            You are not authorized to edit this record. Only the author or an administrator may make changes to records.<br /><hr />

        </div>
     }
 }
 else {
     <div class="col-sm-10 alert-danger">
         You are not signed in. You must be authenticated in order to edit this record.<br /><hr />

     </div>
 }
<p></p>
<div class="col-sm-12" >
  
    <br /><br /><br /><br />
    @Html.ActionLink("[ Back to List ]", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
